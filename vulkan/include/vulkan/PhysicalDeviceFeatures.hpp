#pragma once
#include <vulkan/Bool.hpp>

namespace vk
{
	struct PhysicalDeviceFeatures
	{
		Bool robustBufferAccess;
		Bool fullDrawIndexUint32;
		Bool imageCubeArray;
		Bool independentBlend;
		Bool geometryShader;
		Bool tessellationShader;
		Bool sampleRateShading;
		Bool dualSrcBlend;
		Bool logicOp;
		Bool multiDrawIndirect;
		Bool drawIndirectFirstInstance;
		Bool depthClamp;
		Bool depthBiasClamp;
		Bool fillModeNonSolid;
		Bool depthBounds;
		Bool wideLines;
		Bool largePoints;
		Bool alphaToOne;
		Bool multiViewport;
		Bool samplerAnisotropy;
		Bool textureCompressionETC2;
		Bool textureCompressionASTC_LDR;
		Bool textureCompressionBC;
		Bool occlusionQueryPrecise;
		Bool pipelineStatisticsQuery;
		Bool vertexPipelineStoresAndAtomics;
		Bool fragmentStoresAndAtomics;
		Bool shaderTessellationAndGeometryPointSize;
		Bool shaderImageGatherExtended;
		Bool shaderStorageImageExtendedFormats;
		Bool shaderStorageImageMultisample;
		Bool shaderStorageImageReadWithoutFormat;
		Bool shaderStorageImageWriteWithoutFormat;
		Bool shaderUniformBufferArrayDynamicIndexing;
		Bool shaderSampledImageArrayDynamicIndexing;
		Bool shaderStorageBufferArrayDynamicIndexing;
		Bool shaderStorageImageArrayDynamicIndexing;
		Bool shaderClipDistance;
		Bool shaderCullDistance;
		Bool shaderFloat64;
		Bool shaderInt64;
		Bool shaderInt16;
		Bool shaderResourceResidency;
		Bool shaderResourceMinLod;
		Bool sparseBinding;
		Bool sparseResidencyBuffer;
		Bool sparseResidencyImage2D;
		Bool sparseResidencyImage3D;
		Bool sparseResidency2Samples;
		Bool sparseResidency4Samples;
		Bool sparseResidency8Samples;
		Bool sparseResidency16Samples;
		Bool sparseResidencyAliased;
		Bool variableMultisampleRate;
		Bool inheritedQueries;
	};
}
